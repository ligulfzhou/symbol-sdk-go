package sym

import (
	"bytes"
	"symbol-sdk-go/core"
	"testing"
)

func TestMerkleZero(t *testing.T) {
	if !bytes.Equal(core.Hash256Zero.Bytes, calculateMerkleHash([]string{}).Bytes) {
		t.Fail()
	}
}

func TestMerkleHashes(t *testing.T) {
	merkleHashes := []string{
		"36C8213162CDBC78767CF43D4E06DDBE0D3367B6CEAEAEB577A50E2052441BC8",
		"8A316E48F35CDADD3F827663F7535E840289A16A43E7134B053A86773E474C28",
		"6D80E71F00DFB73B358B772AD453AEB652AE347D3E098AE269005A88DA0B84A7",
		"2AE2CA59B5BB29721BFB79FE113929B6E52891CAA29CBF562EBEDC46903FF681",
		"421D6B68A6DF8BB1D5C9ACF7ED44515E77945D42A491BECE68DA009B551EE6CE",
		"7A1711AF5C402CFEFF87F6DA4B9C738100A7AC3EDAD38D698DF36CA3FE883480",
		"1E6516B2CC617E919FAE0CF8472BEB2BFF598F19C7A7A7DC260BC6715382822C",
		"410330530D04A277A7C96C1E4F34184FDEB0FFDA63563EFD796C404D7A6E5A20",
	}
	res := "7D853079F5F9EE30BDAE49C4956AF20CDF989647AFE971C069AC263DA1FFDF7E"
	if res != calculateMerkleHash(merkleHashes).String() {
		t.Fail()
	}

	unBalancedHashes := []string{
		"36C8213162CDBC78767CF43D4E06DDBE0D3367B6CEAEAEB577A50E2052441BC8",
		"8A316E48F35CDADD3F827663F7535E840289A16A43E7134B053A86773E474C28",
		"6D80E71F00DFB73B358B772AD453AEB652AE347D3E098AE269005A88DA0B84A7",
		"2AE2CA59B5BB29721BFB79FE113929B6E52891CAA29CBF562EBEDC46903FF681",
		"421D6B68A6DF8BB1D5C9ACF7ED44515E77945D42A491BECE68DA009B551EE6CE",
	}
	res = "DEFB4BF7ACF2145500087A02C88F8D1FCF27B8DEF4E0FDABE09413D87A3F0D09"

	if calculateMerkleHash(unBalancedHashes).String() != res {
		t.Fail()
	}
}

func calculateMerkleHash(hashes []string) *core.Hash256 {
	builder := NewMerkleHashBuilder()
	for _, str := range hashes {
		builder.Update(str)
	}
	return builder.Final()
}
